package exactChange;

public class ExactChangeRunner implements Runnable {

	private ExactChangeModel model;
	private int[] bestDenominations;
	private int N;

	ExactChangeRunner(ExactChangeModel model, int N) {
		this.model = model;
		this.N = N;
	}

	public int[] getBestDenominations() {
		synchronized (bestDenominations) {
			return bestDenominations;
		}
	}

	public void setBestDenominations(int[] bestDenominations) {
		synchronized (bestDenominations) {
			this.bestDenominations = bestDenominations;
		}
	}

	@Override
	public void run() {
		setBestDenominations(model.getStartingDenominations());

		optimize();

	}

	//optimize till gain is above threshold
	private void optimize(final float minDeltaToRun) {
		ExactChangeCalculator calci = new ExactChangeCalculator();
		calci.calculateCostsForDenominations(bestDenominations);
		float bestCostTillNow = calci.getCostGivenN(N);
		
		
		int[] newDenominations = takeStep();
		calci.calculateCostsForDenominations(bestDenominations);
		float delta = 
	}

}
